@page "/budget"

<PageTitle>Budget</PageTitle>

<h1>Budget</h1>

<div class="container">
    <div class="row">
        <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4">
            <RadzenCard class="m-3">
                <h3 class="h5">Monthly budget spend</h3>
                <b>£1478.78</b>
            </RadzenCard>
        </div>
        <div class="col-sm-12 col-lg-6 offset-lg-3 my-5">
            <RadzenChart>
                <RadzenPieSeries Data="@expenditureByCategoriesWithRemaining" Title="Revenue" CategoryProperty="Category" ValueProperty="Amount" />
            </RadzenChart>
        </div>
    </div>
</div>

<RadzenButton Text="Add New Budget Line" ButtonStyle="ButtonStyle.Primary"></RadzenButton>

<div class="row px-3">
    <div class="col-md-6 col-lg-4 p-3">
        <RadzenCard>
            <h4 class="mb-4">Apple Music</h4>
            <RadzenTextBox Placeholder="Apple Music" />
        </RadzenCard>
    </div>
    <div class="col-md-6 col-lg-4 p-3">
        <RadzenCard>
            <h4 class="mb-4">Monthly Cost</h4>
            <RadzenTextBox Placeholder="£14.99" />
        </RadzenCard>
    </div>
    <div class="col-lg-6 col-xl-4 p-3">
        <RadzenCard>
            <h4 class="mb-4">Contract End Date</h4>
            <RadzenDatePicker @bind-Value=@contractEndDate DateFormat="d" />
        </RadzenCard>
    </div>
</div>



@code {

    public double Income = 3773.89;
    DateTime? contractEndDate = DateTime.Now;

    List<DataItem> expenditureByCategoriesWithRemaining;

    protected override void OnInitialized() {

    expenditureByCategoriesWithRemaining = new List<DataItem> {
        new DataItem
        {
            Category = "Debt",
            Amount = Math.Round((366 / Income) * 100, 2)
        },
        new DataItem
        {
            Category = "Entertainment",
            Amount = Math.Round((43.68 / Income) * 100, 2)
        },
        new DataItem
        {
            Category = "Health",
            Amount = Math.Round((11.3 / Income) * 100, 2)
        },
        new DataItem
        {
            Category = "Business",
            Amount = Math.Round((11.4 / Income) * 100, 2)
        },
        new DataItem
        {
            Category = "Utility",
            Amount = Math.Round((1046.40 / Income) * 100, 2)
        },
        
    };

        expenditureByCategoriesWithRemaining.Add(
            new DataItem
            {
                Category = "Remaining",
                Amount = expenditureByCategoriesWithRemaining.Sum(item => item.Amount)
            }
        );
    }

    class DataItem {
        public string Category { get; set; }
        public double Amount { get; set; }
    }
}
